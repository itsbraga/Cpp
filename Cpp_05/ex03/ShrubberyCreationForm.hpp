/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.hpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: annabrag <annabrag@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/05/22 17:01:34 by annabrag          #+#    #+#             */
/*   Updated: 2025/05/26 22:05:16 by annabrag         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef SHRUBBERYCREATIONFORM_HPP
# define SHRUBBERYCREATIONFORM_HPP

/******************************************************************************\
 * LIBRARIES
\******************************************************************************/

# include "AForm.hpp"

/******************************************************************************\
 * CLASS
\******************************************************************************/

class Bureaucrat;

class ShrubberyCreationForm : public AForm
{
	private:
			std::string	_target;

	public:
			ShrubberyCreationForm(const std::string& target);
			ShrubberyCreationForm(const ShrubberyCreationForm& toCopy);
			ShrubberyCreationForm&		operator=(const ShrubberyCreationForm& toCopy);
			~ShrubberyCreationForm();

			const std::string&	getName() const;
			const bool&			getSignatureState() const;
			const uint32_t&		getRequiredGradeToSign() const;
			const uint32_t&		getRequiredGradeToExec() const;

			void	beSigned(const Bureaucrat& bureaucrat);
			void	execute(Bureaucrat const& executor) const;
			void	createAsciiTree(const std::string& target) const;
};

/******************************************************************************\
 * ASCII TREES
\******************************************************************************/

# define TREE1 \
"      _{\\ _{\\{\\/}/}/}__\n" \
"     {/{/\\}{/{/\\}(\\}{/\\} _\n" \
"    {/{/\\}{/{/\\}(_)\\}{/{/\\}  _\n" \
" {\\{/(\\}\\}{/{/\\}\\}{/){/\\}\\} /\\}\n" \
" {/{/(_)/}{\\{/)\\}{\\(_){/}/}/}/}\n" \
"_{\\{/{/{\\{/{/(_)/}/}/}{\\(/}/}/}\n" \
"{/{/{\\{\\{\\(/}{\\{\\/}/}{\\}(_){\\/}\\}\n" \
"_{\\{/{\\{/(_)\\}/}{/{/{/\\}\\})\\}{/\\}\n" \
"{/{/{\\{\\(/}{/{\\{\\{\\/})/}{\\(_)/}/}\\}\n" \
"{\\{\\/}(_){\\{\\{\\/}/}(_){\\/}{\\/}/})/}\n" \
"{/{\\{\\/}{/{\\{\\{\\/}/}{\\{\\/}/}\\}(_)\n" \
"{/{\\{\\/}{/){\\{\\{\\/}/}{\\{\\(/}/}\\}/}\n" \
"{/{\\{\\/}(_){\\{\\{\\(/}/}{\\(_)/}/}\\}\n" \
"  {/({/{\\{/{\\{\\/}(_){\\/}/}\\}/}(\\}\n" \
"   (_){/{\\/}{\\{\\/}/}{\\{\\)/}/}(_)\n" \
"     {/{/{\\{\\/}{/{\\{\\{\\(_)/}\n" \
"      {/{\\{\\{\\/}/}{\\{\\\\}/}\n" \
"       {){/ {\\/}{\\/} \\}\\}\n" \
"       (_)  \\.-'.-/\n" \
"   __...--- |'-.-'| --...__\n" \
"_...--\"   .-'   |'-.-'|  ' -.  \"\"--..__\n" \
"-\"    ' .  . '    |.'-._| '  . .  '   jro\n" \
".  '-  '    .--'  | '-.'|    .  '  . '\n" \
"         ' ..     |'-_.-|\n" \
" .  '  .       _.-|-._ -|-._  .  '  .\n" \
"             .'   |'- .-|   '.\n" \
" ..-'   ' .  '.   `-._.-'   .'  '  - .\n" \
"  .-' '        '-._______.-'     '  .\n" \
"       .      ~,\n" \
"   .       .   |\\   .    ' '-.\n" \
"   ___________/  \\____________\n" \
"  /  Why is it, when you want \\\n" \
" |  something, it is so damn   |\n" \
" |    much work to get it?     |\n" \
"  \\___________________________/\n"

# define TREE2 \
"      ccee88oo\n" \
"   C8O8O8Q8PoOb o8oo\n" \
" dOB69QO8PdUOpugoO9bD\n" \
"CgggbU8OU qOp qOdoUOdcb\n" \
"    6OuU  /p u gcoUodpP\n" \
"      \\\\//  /douUP\n" \
"        \\\\////\n" \
"         |||/\\\n" \
"         |||\\/\n" \
"         |||||\n" \
"   .....//||||\\....\n"

# define TREE3 \
"        *\n" \
"       /|\\\n" \
"      /*|O\\\n" \
"     /*/|\\*\\\n" \
"    /X/O|*\\X\\\n" \
"   /*/X/|\\X\\*\\\n" \
"  /O/*/X|*\\O\\X\\\n" \
"        |X|\n" \
"        |X|\n"

# define TREE4 \
"                     . . .\n" \
"                   .        .  .     ..    .\n" \
"                .                 .         .  .\n" \
"                                .\n" \
"                               .                ..\n" \
"               .          .            .              .\n" \
"               .            \'.,        .               .\n" \
"               .              \'b      *\n" \
"                .              \'$    #.                ..\n" \
"               .    .           $:   #:               .\n" \
"             ..      .  ..      *#  @):        .   . .\n" \
"                          .     :@,@):   ,.**:\'   .\n" \
"              .      .,         :@@*: ..**\'      .   .\n" \
"                       \'#o.    .:(@\'.@*\"\'  .\n" \
"               .  .       \'bq,..:,@@*\'   ,*      .  .\n" \
"                          ,p$q8,:@)\'  .p*\'      .\n" \
"                   .     \'  . \'@@Pp@@*\'    .  .\n" \
"                    .  . ..    Y7\'.\'     .  .\n" \
"                              :@):.\n" \
"                             .:@:\'.\n" \
"                           .::(@:.\n"

/******************************************************************************\
 * FUNCTIONS
\******************************************************************************/

std::ostream&	operator<<(std::ostream& os, const ShrubberyCreationForm& form);

#endif